<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.paakciu.mbg.mapper.NormalMsgMapper">
  <resultMap id="BaseResultMap" type="top.paakciu.mbg.model.NormalMsg">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="NM_fromid" jdbcType="BIGINT" property="nmFromid" />
    <result column="NM_toid" jdbcType="BIGINT" property="nmToid" />
    <result column="NM_time" jdbcType="TIMESTAMP" property="nmTime" />
    <result column="NM_state" jdbcType="TINYINT" property="nmState" />
    <result column="NM_type" jdbcType="TINYINT" property="nmType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="top.paakciu.mbg.model.NormalMsg">
    <result column="NM_msg" jdbcType="LONGVARCHAR" property="nmMsg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, NM_fromid, NM_toid, NM_time, NM_state, NM_type
  </sql>
  <sql id="Blob_Column_List">
    NM_msg
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="top.paakciu.mbg.model.NormalMsgExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from normal_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="top.paakciu.mbg.model.NormalMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from normal_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from normal_msg
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from normal_msg
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.paakciu.mbg.model.NormalMsgExample">
    delete from normal_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.paakciu.mbg.model.NormalMsg">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into normal_msg (NM_fromid, NM_toid, NM_time, 
      NM_state, NM_type, NM_msg
      )
    values (#{nmFromid,jdbcType=BIGINT}, #{nmToid,jdbcType=BIGINT}, #{nmTime,jdbcType=TIMESTAMP}, 
      #{nmState,jdbcType=TINYINT}, #{nmType,jdbcType=TINYINT}, #{nmMsg,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.paakciu.mbg.model.NormalMsg">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into normal_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nmFromid != null">
        NM_fromid,
      </if>
      <if test="nmToid != null">
        NM_toid,
      </if>
      <if test="nmTime != null">
        NM_time,
      </if>
      <if test="nmState != null">
        NM_state,
      </if>
      <if test="nmType != null">
        NM_type,
      </if>
      <if test="nmMsg != null">
        NM_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nmFromid != null">
        #{nmFromid,jdbcType=BIGINT},
      </if>
      <if test="nmToid != null">
        #{nmToid,jdbcType=BIGINT},
      </if>
      <if test="nmTime != null">
        #{nmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nmState != null">
        #{nmState,jdbcType=TINYINT},
      </if>
      <if test="nmType != null">
        #{nmType,jdbcType=TINYINT},
      </if>
      <if test="nmMsg != null">
        #{nmMsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.paakciu.mbg.model.NormalMsgExample" resultType="java.lang.Long">
    select count(*) from normal_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update normal_msg
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nmFromid != null">
        NM_fromid = #{record.nmFromid,jdbcType=BIGINT},
      </if>
      <if test="record.nmToid != null">
        NM_toid = #{record.nmToid,jdbcType=BIGINT},
      </if>
      <if test="record.nmTime != null">
        NM_time = #{record.nmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nmState != null">
        NM_state = #{record.nmState,jdbcType=TINYINT},
      </if>
      <if test="record.nmType != null">
        NM_type = #{record.nmType,jdbcType=TINYINT},
      </if>
      <if test="record.nmMsg != null">
        NM_msg = #{record.nmMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update normal_msg
    set id = #{record.id,jdbcType=BIGINT},
      NM_fromid = #{record.nmFromid,jdbcType=BIGINT},
      NM_toid = #{record.nmToid,jdbcType=BIGINT},
      NM_time = #{record.nmTime,jdbcType=TIMESTAMP},
      NM_state = #{record.nmState,jdbcType=TINYINT},
      NM_type = #{record.nmType,jdbcType=TINYINT},
      NM_msg = #{record.nmMsg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update normal_msg
    set id = #{record.id,jdbcType=BIGINT},
      NM_fromid = #{record.nmFromid,jdbcType=BIGINT},
      NM_toid = #{record.nmToid,jdbcType=BIGINT},
      NM_time = #{record.nmTime,jdbcType=TIMESTAMP},
      NM_state = #{record.nmState,jdbcType=TINYINT},
      NM_type = #{record.nmType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.paakciu.mbg.model.NormalMsg">
    update normal_msg
    <set>
      <if test="nmFromid != null">
        NM_fromid = #{nmFromid,jdbcType=BIGINT},
      </if>
      <if test="nmToid != null">
        NM_toid = #{nmToid,jdbcType=BIGINT},
      </if>
      <if test="nmTime != null">
        NM_time = #{nmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nmState != null">
        NM_state = #{nmState,jdbcType=TINYINT},
      </if>
      <if test="nmType != null">
        NM_type = #{nmType,jdbcType=TINYINT},
      </if>
      <if test="nmMsg != null">
        NM_msg = #{nmMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="top.paakciu.mbg.model.NormalMsg">
    update normal_msg
    set NM_fromid = #{nmFromid,jdbcType=BIGINT},
      NM_toid = #{nmToid,jdbcType=BIGINT},
      NM_time = #{nmTime,jdbcType=TIMESTAMP},
      NM_state = #{nmState,jdbcType=TINYINT},
      NM_type = #{nmType,jdbcType=TINYINT},
      NM_msg = #{nmMsg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.paakciu.mbg.model.NormalMsg">
    update normal_msg
    set NM_fromid = #{nmFromid,jdbcType=BIGINT},
      NM_toid = #{nmToid,jdbcType=BIGINT},
      NM_time = #{nmTime,jdbcType=TIMESTAMP},
      NM_state = #{nmState,jdbcType=TINYINT},
      NM_type = #{nmType,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="top.paakciu.mbg.model.NormalMsgExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from normal_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="top.paakciu.mbg.model.NormalMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from normal_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>